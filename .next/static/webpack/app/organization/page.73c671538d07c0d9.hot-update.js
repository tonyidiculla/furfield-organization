"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/organization/page",{

/***/ "(app-pages-browser)/./src/lib/fetchUserPrivileges.ts":
/*!****************************************!*\
  !*** ./src/lib/fetchUserPrivileges.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchUserPrivileges: () => (/* binding */ fetchUserPrivileges)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* harmony import */ var _privileges__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./privileges */ \"(app-pages-browser)/./src/lib/privileges.ts\");\n\n\n/**\n * Fetch platform roles and assignments for a given user\n * Now using direct master_data schema access since it's been exposed\n */ async function fetchUserPrivileges(userId) {\n    try {\n        console.log('[fetchUserPrivileges] Starting fetch for user:', userId);\n        // First, get the user's platform_id from profiles in master_data schema\n        const { data: profile, error: profileError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.schema('master_data').from('profiles').select('user_platform_id').eq('user_id', userId).single();\n        console.log('[fetchUserPrivileges] Profile query result:', {\n            profile,\n            error: profileError\n        });\n        if (profileError || !(profile === null || profile === void 0 ? void 0 : profile.user_platform_id)) {\n            console.error('[fetchUserPrivileges] Error fetching user profile or no user_platform_id:', profileError);\n            return null;\n        }\n        const userPlatformId = profile.user_platform_id;\n        console.log('[fetchUserPrivileges] Found user_platform_id:', userPlatformId);\n        // Now query using user_platform_id instead of user_id\n        const { data: assignments, error: assignmentsError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.schema('master_data').from('user_to_role_assignment').select('*').eq('user_platform_id', userPlatformId).eq('is_active', true);\n        console.log('[fetchUserPrivileges] Assignments query result:', {\n            count: (assignments === null || assignments === void 0 ? void 0 : assignments.length) || 0,\n            error: assignmentsError\n        });\n        if (assignmentsError) {\n            console.error('[fetchUserPrivileges] Error fetching role assignments:', assignmentsError);\n            return null;\n        }\n        if (!assignments || assignments.length === 0) {\n            return {\n                roles: [],\n                assignments: [],\n                highestPrivilegeLevel: null,\n                allPermissions: new Set(),\n                allModules: new Set()\n            };\n        }\n        // Get role IDs\n        const roleIds = assignments.map((a)=>a.platform_role_id).filter(Boolean);\n        if (roleIds.length === 0) {\n            return {\n                roles: [],\n                assignments: assignments,\n                highestPrivilegeLevel: null,\n                allPermissions: new Set(),\n                allModules: new Set()\n            };\n        }\n        // Fetch the corresponding platform roles\n        const { data: roles, error: rolesError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.schema('master_data').from('platform_roles').select('*').in('id', roleIds).eq('is_active', true);\n        console.log('[fetchUserPrivileges] Roles query result:', {\n            count: (roles === null || roles === void 0 ? void 0 : roles.length) || 0,\n            error: rolesError\n        });\n        if (rolesError) {\n            console.error('[fetchUserPrivileges] Error fetching platform roles:', rolesError);\n            return null;\n        }\n        const result = (0,_privileges__WEBPACK_IMPORTED_MODULE_1__.aggregatePrivileges)(roles !== null && roles !== void 0 ? roles : [], assignments !== null && assignments !== void 0 ? assignments : []);\n        console.log('[fetchUserPrivileges] Final result:', {\n            rolesCount: result.roles.length,\n            highestPrivilege: result.highestPrivilegeLevel,\n            permissionsCount: result.allPermissions.size,\n            modulesCount: result.allModules.size\n        });\n        return result;\n    } catch (error) {\n        console.error('Unexpected error fetching user privileges:', error);\n        return null;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/fetchUserPrivileges.ts\n"));

/***/ })

});